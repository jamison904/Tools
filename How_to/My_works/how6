[quote][b][color=red]How to compile a kernel for d2tmo (T-mobile S3)[/color][/b][/quote]


[hide]
[indent][indent][b]
First off let me start with saying this, half assing a kernel or not following all the steps exactly [B]will brick your device![/B]. You have been warned. I personally was every hesitant to even try to make my own kernels because of the brick factor. After researching for weeks and [B]reading like crazy[/B] I felt like I had enough knowledge to attempt to build my own kernel. After talking with my buddy [B]TDJ[/B] he told me that when it comes to kernels you just have to get learn by hands on. Of course he was right. So be careful and if something doesn't seem right,do not flash it. Also the kernel_test.zip attached is for TMO/ATT S3. I haven't checked to see if the boot block is the same for all of the US S3's. I'll check and update this. Until then only use for TMO/ATT S3.

[code]
#include 
/*
* Your warranty is now void.
*
* I am not responsible for bricked devices, dead SD cards,
* thermonuclear war, or you getting fired because the alarm app failed. Please
* do some research if you have any concerns about features included in this ROM
* before flashing it! YOU are choosing to make these modifications, and if
* you point the finger at me for messing up your device, I will laugh at you.
*/

[COLOR="Red"]By using this how to you agree with the above terms![/COLOR]
[/code]

Now with that out of the way lets have some fun!  This how to is for the T999 TW kernel. This guide will work for all S3 devices with minimal changes. Also the basics here will work for all devices. Also at this point the guide is only build a stock kernel without changes. That will come in another update. I will need to show you git and how to use it before you can make changes. Also if you make and changes and you share the kernel with others you [COLOR="Red"]have to post your source!![/COLOR] So you will need to know how to use github or bithub. These too will come later.
[/indent]

[indent]
First you will need to download the source for the kernel. You will need to go to [url]http://opensource.samsung.com/[/url] and find the source for your device. Search for t999 and grab the one named SGH-T999_JB_TMB_Opensource.zip. Or you can grab it from my Goo account [URL="http://goo.im/devs/Jamison904/Stock_firmwares/SGH-T999_JB_TMB_Opensource.zip"]here. . . . .[/URL]
[/indent]

[indent]
Now you need to extract the zip. Then extract Kernel.tar.gz. Now make a folder in your home directory if you have not already called android. Then inside android make another director called kernel. Last make a folder for you kernel, you can name it whatever. For this how to lets just call it T999_TW_kernel. Now move everything from the extracted Kernel.tar.gz to this folder. This is your kernel working folder. 
[/indent]

[indent]
Next you will need to choose the toolchain you plan on using. There are many great ones out there. Just Google "kernel tool chain" to see the many different ones. The Android NDK comes with a bunch and most are 100% stable. Since I also suport AOKP for many devices, I just use the one they use. I have uploaded it to my github for you guys to download and use. Go to [url]https://github.com/jamison904/arm-eabi-4.6[/url] and click on zip to download it. 

[center][IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/toolchain_download_zps0a5b5d34.png[/IMG][/center]
[/indent]


[indent]
Now you will need to set your path and set the cross compile in your make file inside your kernel working folder.

[center][IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/toolchain_path_zps02b13b60.png[/IMG][/center]
[/indent]

[indent]
We are going to setup your toolchain path now. Extract the downloaded toolchain from my github and make a folder inside the android folder called toolchain. Now move the extracted tool chain here. Open up the make file in the kernel folder and set your path like below. (of course change Jamison904 to whatever yours is named.) save and close.

[code]
ARCH		?= arm
CROSS_COMPILE  = /home/jamison904/android/toolchain/arm-eabi-4.6/bin/arm-eabi-
[/code]


[center][IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/your_kernel_path_zpsba07a510.png[/IMG][/center]

[/indent]


[indent]
Name your kernel! Open the make folder and make the change then save and close.

[center][IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/name_kernel_zps5610da70.png[/IMG][/center]
[/indent]



[indent]
Now open terminal here inside the kernel build folder. You need set it up. You need to:

[code]
make clean && make mrproper

[/code]

[/indent]



[indent]
Ok time to pull the defconfig from your phone ([COLOR="Red"]This is for a TW Kernel so you need to be running a TW ROM. You also will need to be running a stock kernel for this to work right...[/COLOR]) You will need to connect your phone to your computer with adb debugging turned on. Then open the terminal from your desktop and:

[code]
adb pull /proc/config.gz
[/code]

then 

[code]
gunzip config.gz
[/code]

This will give you a file called config. You will want to rename this file to t999_defconfig. After that you will need to move this file to /home/jamison904 (your user name)/android/kernel/T999_TW_kernel/arch/arm/configs. Drop it here. 

[/indent]


[indent]
Now it is time to attempt to build. You will need to do:

[code]
make xconfig
[/code]

This will bring up a nice user friendly UI to help you set up the build.


[center]
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/xconfig1_zpsb0e66db4.png[/IMG]


[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/xconfig2_zps337faad7.png[/IMG]



Now you need to click on the folder. Navigate to arch/arm/config and click on your T999_defconfig.
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/xconfig3_zpscb3c6a48.png[/IMG]



This shows you where to find the schedulers. You can change the default scheduler here. Also can turn them on and off, as well if you want to build them in or make them build as a module.
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/xconfig4_zpsb9451799.png[/IMG]



This shows you where to find the governors. You can change the default governor here.  Also can turn them on and off, as well if you want to build them in or make them build as a module.
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/xconfig5_zps1827e8ef.png[/IMG]

[/center]
[/indent]


[indent]
Now lets see if you set it up correctly.... lol. You will do:

[code]
make
[/code]

[center][IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/build_zpsa3526892.png[/IMG][/center]

Later after you know that it will build you can seed it up by doing make -j5. This will make with 5 jobs at once. This is way faster but very hard to trouble shoot and find your errors. If it stops without finishing you will need to make clean && make mrproper then do the xconfig again and save and close then "make" .... This will only make with one job at a time thus you have an error and it will stop and you will be able to read the error. Copy and paste to pastebin.com and post the link here and I will help you figure it out. :cool:

[/indent]



[indent]
If you get this, congratulations you have made your first kernel... time to package it up and test.


[center][IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/Kernel_done_zpsb1783124.png[/IMG][/center]

[/indent][/indent]







[indent][indent]
Finding the zimage (kernel itself.) Navigate to arch/arm/boot and grab the zimage.

[center][IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/Find_zimage1_zps089773ec.png[/IMG]


[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/find_zimage2_zpsd73bde0e.png[/IMG]


[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/find_zimage3_zpse39c6f45.png[/IMG]


[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/find_zimage4_zpse8d810bf.png[/IMG][/center]

[/indent]


[indent]
Now to find the modules. Do a ctrl f in the root of your kernel build folder and screach for .ko. Make sure to include the . before ko. Then copy and paste these into a folder to hold them for the zip.


[center][IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/find_modules_zpsae12a7fc.png[/IMG]


[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/find_modules2_zpsef12e054.png[/IMG][/center]

[/indent]


[indent] 
Now you need to unpackage a boot.img and replace the zimage then repackage it up. The easiest way to do this is with the Android kitchen. Takes less then a minute. If you have been following my guides here you will already have it setup and have working knowledge of the kitchen. If not, stop here and go catch up, i'll wait....;) Ok moving on.

[/indent]


[indent]

I made a folder called WORKING_Kernel to keep these away from real working folders just in case I forget. Don't need to update my S2 ROM with a S3 kernel. Anyways...

[center][IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage1_zps33b0bb5d.png[/IMG]


Place a stock boot.img into the folder
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage2_zpsfaab82c8.png[/IMG]


Now start up the kitchen and press 0. Then option 12 for boot.img. 
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage3_zpsf59ce127.png[/IMG]


Then press w. This will unpack the boot.img.
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage4_zps2e4dd41d.png[/IMG]


[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage5_zps60231c36.png[/IMG]


The end result will be a folder called "BOOT-EXTRACTED"
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage6_zps9c45fb06.png[/IMG]



Open it and you will see the ram-disk and the Zimage (kernel). Delete the Zimage here!
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage7_zps7f68d1d4.png[/IMG]


Grab your new Zimage and copy and paste it in to the "boot-extracted"
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage8_zpsd5b50db7.png[/IMG]


[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage9_zps9243b450.png[/IMG]



Now to repackage it. Back over in the Kitchen press "b" to build
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage10_zps2f87951e.png[/IMG]


[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage11_zpsb87bf7b3.png[/IMG]


Your new kernel is in the boot.img
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/bootimage12_zpse7cdcbe6.png[/IMG]


[/center]
[/indent]


[indent]
Now to flash the kernel. I have made you guys an empty flashable zip attached below. This way no one breaks their device trying to flash their kernel. If you do brick you didn't read the directions as this zip is dummy proof so to speak. ;)
[/indent]


[indent]
Now double click on the kernel_test.zip and drag and drop your new boot.img into the archive.

[center][IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/zip1_zpsd7c7021c.png[/IMG]


[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/zip2_zps75f21a05.png[/IMG]



Now navigate to system/lib/modules and press Ctrl A to select all of the modules then drag and drop these here.
[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/zip4_zps2e2b739c.png[/IMG]

[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/zip5_zpsb54c4863.png[/IMG]

[IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/zip6_zps4875672a.png[/IMG]


[/center][/indent]


[indent]
Done. Copy and paste the zip to your SDcard and reboot into recovery and pry.... lol. You will be good if you followed the directions. Enjoy your own build stock TW kernel! [I]Again remember not to public share your kernel unless you have uploaded "your exact source" and can provide a public link to it. You have been warned![/I] Next updates will include how to work git, commits, and github as well as some more advanced kernel tweaks and code. Also how Cherry-pick :cool:
[center][IMG]http://i1258.photobucket.com/albums/ii537/InfamousROM/How%20to/done_zpsacfb0b02.png[/IMG][/center]


[/b][/indent][/indent]

[B][indent] For more advanced kernel work you will need meld to work conflicts. Open terminal and:

[code]

sudo apt-get install meld

[/code]

Now when you get a conflict from cherry picking you will do

[code]
git status
[/code]

this will show you the conflicting files. Then to work them you will need to

[code]
git mergetool
[/code]

For more info on how to use it go to [url]http://meldmerge.org/[/url] ... have fun!

[/indent][/B]
[/hide]
